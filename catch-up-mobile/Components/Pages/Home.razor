@page "/"
@inject IServiceProvider ServiceProvider
@inject IJSRuntime JS
@using catch_up_mobile.SQLite
@inject CatchUpDbContext _dbContext

<div class="container text-center">
    <h2>Welcome in catchUp</h2>
</div>

<div>
    <div class="container mt-4">
        <div class="row">
            <!-- Tasks Card -->
            <div class="col-md-3 mb-4">
                <div class="card">
                    <img src="images/task-batman-image.jpg" class="card-img-top" alt="Tasks Image" />
                    <div class="card-body">
                        <h5 class="card-title">
                            <i class="bi bi-list-task fs-4"></i> Tasks
                        </h5>
                        <p class="card-text">Manage and track your tasks.</p>
                        <a class="btn btn-primary" href="tasks">Go to Tasks</a>
                    </div>
                </div>
            </div>

            <!-- Schoolings Card -->
            <div class="col-md-3 mb-4">
                <div class="card">
                    <img src="images/schooling-batman-image.jpg" class="card-img-top" alt="Schoolings Image" />
                    <div class="card-body">
                        <h5 class="card-title">
                            <i class="bi bi-book fs-4"></i> Schoolings
                        </h5>
                        <p class="card-text">Access your schooling list and details.</p>
                        <a class="btn btn-primary" href="schoolingList">Go to Schoolings</a>
                    </div>
                </div>
            </div>

            <!-- Feedbacks Card -->
            <div class="col-md-3 mb-4">
                <div class="card">
                    <img src="images/feedback-batman-image.jpg" class="card-img-top" alt="Feedbacks Image" />
                    <div class="card-body">
                        <h5 class="card-title">
                            <i class="bi bi-pencil-square fs-4"></i> Feedbacks
                        </h5>
                        <p class="card-text">Submit and view feedbacks.</p>
                        <a class="btn btn-primary" href="feedback">Go to Feedbacks</a>
                    </div>
                </div>
            </div>

            <!-- FAQ Card -->
            <div class="col-md-3 mb-4">
                <div class="card">
                    <img src="images/faq-batman-image.jpg" class="card-img-top" alt="FAQ Image" />
                    <div class="card-body">
                        <h5 class="card-title">
                            <i class="bi bi-question-circle fs-4"></i> FAQ
                        </h5>
                        <p class="card-text">Find answers to frequently asked questions.</p>
                        <a class="btn btn-primary" href="faq">Go to FAQ</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private float lightLevel;
    private ILightSensorService? lightSensorService;

    protected override async Task OnInitializedAsync()
    {
        var fontSize = await _dbContext.GetFontSizeAsync();
        if (fontSize != null)
            await JS.InvokeVoidAsync("changeFontSize", fontSize.FontSize);

        //WERYK DODAJ SWITCHA W SETTINGACH KTÓRY WŁ/WYŁ NASŁUCHIWANIE CZUJNIKA ŚWIATŁA
        //MOŻESZ GO NAZAWAĆ AUTO THEME
        //JEŚLI ON - AUTOMATYCZNY MOTYW (DRUGI SWITCH "DARK MODE" WTEDY JEST UKRYTY)
        //JEŚLI OFF - UŻYTKOWNIK WYBIERA MOTYW SWITCHEM "DARK MODE"

        if (DeviceInfo.Platform == DevicePlatform.Android)
        {
            lightSensorService = ServiceProvider.GetService<ILightSensorService>();
            if (lightSensorService != null)
            {
                lightSensorService.LightLevelChanged += OnLightLevelChanged;
                StartSensor();
            }
        }
    }

    private void StartSensor()
    {
        if (DeviceInfo.Platform == DevicePlatform.Android && lightSensorService != null)
        {
            lightSensorService.Start();
        }
    }

    private async void OnLightLevelChanged(float level)
    {
        var isAuto = await JS.InvokeAsync<string>("localStorage.getItem", "autoTheme");
        if (isAuto == "yes")
        {
            lightLevel = level;
            if (lightLevel > 150)
            {
                JS.InvokeVoidAsync("changeTheme", "catchUpDay");
            }
            else
            {
                JS.InvokeVoidAsync("changeTheme", "catchUpNight");
            }
            InvokeAsync(StateHasChanged);
        }
        
    }

    private void StopSensor()
    {
        if (DeviceInfo.Platform == DevicePlatform.Android && lightSensorService != null)
        {
            lightSensorService.Stop();
        }
    }

    public void Dispose()
    {
        if (DeviceInfo.Platform == DevicePlatform.Android && lightSensorService != null)
        {
            lightSensorService.LightLevelChanged -= OnLightLevelChanged;
        }
    }
}