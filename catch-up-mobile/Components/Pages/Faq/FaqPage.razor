@page "/faq"

@inject HttpClient _httpClient
@inject CatchUpLocalDb _localDb
@inject NavigationManager NavigationManager

@using catch_up_mobile.Dtos
@using catch_up_mobile.SQLite
@using CommunityToolkit.Maui.Alerts
@using catch_up_mobile.Components.Pages.MaterialManager

<div class="container text-center">
    <h2>Frequently Asked Questions</h2>

    @if (faqs == null)
    {
        <Loading />
    }
    else
    {
        if (offlineMode)
        {
            <div class="alert alert-primary" role="alert">
                You are working in offline mode
            </div>
        }

        <div class="accordion text-start mt-3 mb-3" id="accordionExample">
            @if (faqs.Count() == 0)
            {
                <div class="alert alert-warning text-center" role="alert">
                   No FAQs found
                </div>
            }
            @for (int i = 0; i < faqs.Count; i++)
            {
                var faq = faqs[i];
                var collapseId = $"collapse{i}";
                var headingId = $"heading{i}";

                <div class="accordion-item">
                    <h2 class="accordion-header" id="@headingId">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                            <strong>@(i+1). @faq.Title</strong>
                        </button>
                    </h2>
                    <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            @faq.Answer
                            @if(faq.MaterialsId != null)
                            {
                                <br />
                                <br />
                                <p>Additional Materials:</p>

                                @if (!offlineMode)
                                {
                                    <div class="m-2">
                                     
                                        <MaterialItem 
                                            materialId=faq.MaterialsId
                                            showRemoveFile="false"
                                            showDownloadFile="true"
                                            showAddingFile="false" />
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-warning text-center" role="alert">
                                        Materials are avaliable only in online mode
                                    </div>
                                }
                            }

                            @if (isAdmin && !offlineMode) 
                            {
                                <div class="d-flex mt-3 mb-3 btn-group ">
                                    <button type="button" class="btn btn-primary" @onclick="() => OpenFaqEdit(faq.Id)">Edit</button>
                                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal" @onclick="() => faqToDelete = faq">
                                        Delete
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        if (isAdmin && !offlineMode)
        {
            <div class="d-flex mt-3 mb-3 btn-group ">
                <button type="button" class="btn btn-primary" @onclick="OpenFaqAdd">Add new FAQ</button>
            </div>
        }
        else
        {
            <div class="alert alert-warning" role="alert">
                You cannot add/edit/delete FAQ in offline mode
            </div>
        }
    }
</div>

<div class="modal fade text-center" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h5>Are you sure you want to delete this FAQ ?</h5>
                <div class="card p-2"><strong>@faqToDelete?.Title</strong></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="ConfirmDeleteFaq">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<FaqDto> faqs;
    private FaqDto faqToDelete;
    private bool offlineMode = true;
    private bool isAdmin = true; // Waiting for ADMIN

    protected override async Task OnInitializedAsync()
    {
        try
        {
            faqs = await _httpClient.GetFromJsonAsync<List<FaqDto>>("api/faq/GetAll");

            await _localDb.DeleteAllFaqsAsync();
            foreach (var faq in faqs)
                await _localDb.AddFaqAsync(faq);

            offlineMode = false;
        }
        catch (Exception)
        {
            faqs = await _localDb.GetFaqsAsync();
            offlineMode = true;
        }
    }

    private void OpenFaqAdd()
    {
        NavigationManager.NavigateTo("/faq/edit");
    }

    private void OpenFaqEdit(int faqId)
    {
        NavigationManager.NavigateTo($"/faq/edit/{faqId}");
    }

    private async Task ConfirmDeleteFaq()
    {
        if (faqToDelete != null)
        {
            await _httpClient.DeleteAsync($"api/faq/delete/{faqToDelete.Id}");
            await _localDb.DeleteFaqAsync(faqToDelete);
            faqs.Remove(faqToDelete);
            faqToDelete = null;
            await Toast.Make("FAQ successfully deleted").Show();
        }
    }
}
