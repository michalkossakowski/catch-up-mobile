@page "/schooling/assignParts/{editedSchoolingId:int}"

@using catch_up_mobile.Components.Pages.MaterialManager
@using catch_up_mobile.Dtos
@using CommunityToolkit.Maui.Alerts

@inject HttpClient _httpClient
@inject NavigationManager NavigationManager

<div>
    <h3>Schooling Parts:</h3
    @if (fullSchoolingDto.Parts.Count() == 0)
    {
        <p>No schooling parts found. Create new now !</p>
        <button type="button" class="btn btn-outline-secondary" @onclick="() => CreateNewPart()">Create</button>
    }
    else
    {
        <button type="button" class="btn btn-outline-secondary" @onclick="() => CreateNewPart()">Create</button>
        <p>Schooling parts found: @fullSchoolingDto.Parts.Count().</p>
        foreach (var part in fullSchoolingDto.Parts)
        {
            <div class="card bg-light-subtle mb-3">
                <div class="card-header">
                    <strong class="fs-3">@part.Name</strong>
                </div>
                <div class="card-body">
                    @part.Content
                    @if (part.Materials != null)
                    {
                        <ol class="list-group list-group-numbered mt-3">
                            @foreach (var material in part.Materials)
                            {
                                <MaterialItem materialId="material.Id"/>
                            }
                        </ol>
                    }
                </div>
            </div>
        }
    }
</div>
@code {
    [Parameter]
    public int editedSchoolingId { get; set; }

    private FullSchoolingDto fullSchoolingDto { get; set; } = new FullSchoolingDto();

    protected override async Task OnInitializedAsync()
    {
        await LoadSchooling();
    }

    private async Task LoadSchooling()
    {
        try
        {
            fullSchoolingDto = await _httpClient.GetFromJsonAsync<FullSchoolingDto>($"api/Schooling/GetFull/{editedSchoolingId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading schooling: {ex.Message}");
            NavigationManager.NavigateTo("/schoolingList");
        }
    }

    private async Task CreateNewPart()
    {
        // NavigationManager.NavigateTo($"/schooling/addPart/{editedSchoolingId}");
    }
}
