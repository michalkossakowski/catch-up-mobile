@page "/localization-test"
@inject IJSRuntime JSRuntime
@inject CatchUpLocalDb _localDb
@inject HttpClient _httpClient
@using Microsoft.Maui.ApplicationModel
@using Microsoft.Maui.Devices.Sensors
@using System.Text.Json
@using CommunityToolkit.Maui.Alerts
@using Dtos
@using catch_up_mobile.SQLite

<div class="container mt-4">
    <h1 class="text-center">City Localization Test</h1>

    <div class="d-flex justify-content-center mb-3">
        <button class="btn btn-primary" @onclick='() => CompanyLocator.GetLocation(_localDb)'>Check your city</button>
    </div>
    <p class="text-center">@CompanyLocator.locationMessage</p>

    <div class="row">
        <div class="col-12 col-md-6">
            <h3>Response</h3>
            <p>@responseMessage</p>
        </div>
    </div>
</div>

@code {
    private List<CompanyCityDto> cities = new List<CompanyCityDto>();
    private string responseMessage = string.Empty;

        /*
    name  Latitude  Longitude Radius(Km)
    { "Warsaw", (52.2297, 21.0122, 15) },
    { "Krakow", (50.0647, 19.9450, 7) },
    { "Gdansk", (54.3520, 18.6466, 8) },
    { "Wroclaw", (51.1079, 17.0385, 8) },
    { "Poznan", (52.4064, 16.9252, 10) },
    { "Lodz", (51.7592, 19.4560, 10) },
    { "Szczecin", (53.4285, 14.5528, 10) },
    { "Bialystok", (53.1325, 23.1688, 7) },
    { "Katowice", (50.2649, 19.0238, 7) }
     */

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (_localDb == null)
            {
                responseMessage = "Database service (_localDb) is not available.";
                return;
            }
            try
            {
                string apiEndpoint = "api/CompanyCity/GetAllCities";
                HttpResponseMessage response = await _httpClient.GetAsync(apiEndpoint);
                string json = await response.Content.ReadAsStringAsync();
                List<CompanyCityDto> apiCities = JsonSerializer.Deserialize<List<CompanyCityDto>>(json);
                if (apiCities != null && apiCities.Any())
                {
                    cities = apiCities;
                    List<CompanyCityDto> existingCities = await _localDb.GetCitiesAsync();
                    foreach (CompanyCityDto city in cities)
                    {
                        if (!existingCities.Any(ec => ec.cityName == city.cityName))
                        {
                            await _localDb.AddCityAsync(city);
                        }
                    }
                    responseMessage = $"Loaded {cities.Count} city/cities from API.";
                    return; 
                }
            }
            catch (Exception apiEx)
            {
                responseMessage = $"Failed to load data from API: {apiEx.Message}.";
            }
            cities = await _localDb.GetCitiesAsync();
            if (cities != null && cities.Any())
            {
                responseMessage = $"Loaded {cities.Count} city/cities from local database.";
            }
            else
            {
                responseMessage = "No cities found in local database.";
            }
        }
        catch (Exception ex)
        {
            responseMessage = "Error during page initialization: " + ex.Message;
        }
    }

}
