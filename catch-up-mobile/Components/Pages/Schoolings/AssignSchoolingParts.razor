@page "/schooling/assignParts/{editedSchoolingId:int}"

@using catch_up_mobile.Components.Pages.MaterialManager
@using catch_up_mobile.Dtos
@using CommunityToolkit.Maui.Alerts

@inject HttpClient _httpClient
@inject NavigationManager NavigationManager
<div>
    <h3 class="text-center">Schooling Parts</h3>
    @if (fullSchoolingDto == null)
    {
        <div class="text-center mt-3">
            <Loading/>
        </div>
    }
    else{ 
        @if (fullSchoolingDto.Parts.Count() == 0){
            <div class="d-grid gap-2 text-center">
                <p>No schooling parts found. Create new now !</p>
                <button type="button" class="btn btn-outline-secondary btn-lg" @onclick="() => CreateNewPart()">Create</button>
            </div>
        }
        else
        {
            <button type="button" class="btn btn-success fs-1 addNewPart" @onclick="() => CreateNewPart()"><i class="bi bi-plus-circle"></i></button>
            <div class="d-grid text-center mb-3 mt-3">
                <h5>Schooling parts found: <i>@fullSchoolingDto.Parts.Count()</i>.</h5>
            </div>
            foreach (var part in fullSchoolingDto.Parts)
            {
                <div class="card bg-light-subtle mb-3">
                    <div class="card-header">
                        <strong class="fs-3">@part.Name</strong>
                    </div>
                    <div class="card-body">
                        @part.Content
                        @if (part.Materials != null)
                        {
                            @foreach (var material in part.Materials)
                            {
                                <MaterialItem materialId="material.Id"
                                    showRemoveFile="true"
                                    showDownloadFile="true"
                                    showAddingFile="true" />
                            }
                        }
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-secondary text-center" @onclick="()=> RemoveMaterials(part.Id)">Remove Material</button>
                            <button type="button" class="btn btn-secondary " @onclick="() => AddMaterial(part.Id)">Add Material</button>
                        </div>  
                    </div>
                </div>
            }
        }
    }
</div>
<style>
.addNewPart{
    position: fixed;
    top: 85vh;
    right: 10vw;
    z-index: 3;
}    
</style>
@code {
    [Parameter]
    public int editedSchoolingId { get; set; }

    private FullSchoolingDto fullSchoolingDto { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadSchooling();
    }

    private async Task LoadSchooling()
    {
        try
        {
            fullSchoolingDto = await _httpClient.GetFromJsonAsync<FullSchoolingDto>($"api/Schooling/GetFull/{editedSchoolingId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading schooling: {ex.Message}");
            NavigationManager.NavigateTo("/schoolingList");
        }
    }

    private async Task RemoveMaterials(int partId)
    {
        // Remove materials
    }

    private async Task AddMaterial(int partId)
    {
        // Add material
    }

    private async Task CreateNewPart()
    {
        // NavigationManager.NavigateTo($"/schooling/addPart/{editedSchoolingId}");
    }
}
