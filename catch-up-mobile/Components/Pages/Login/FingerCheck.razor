@page "/biometricAuthUser"
@inject NavigationManager NavigationManager
@inject CatchUpLocalDb DbContext

@using System.Text.Json
@using System.IdentityModel.Tokens.Jwt
@using catch_up_mobile.Dtos
@using catch_up_mobile.SQLite
@using Microsoft.Maui.Devices.Sensors
@using CommunityToolkit.Maui.Alerts
@using Plugin.Fingerprint
@using Plugin.Fingerprint.Abstractions

<div class="container d-flex flex-column justify-content-center align-items-center" style="min-height: 100vh;">
    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (showError)
    {
        <div class="alert alert-danger text-center" role="alert">
            <i class="bi bi-x-circle-fill fs-1"></i>
            <p class="mt-3">@errorMessage</p>
            <button class="btn btn-primary mt-3" @onclick="RetryAuthentication">Try Again</button>
        </div>
    }
    else
    {
        <div class="text-center">
            <i class="bi bi-fingerprint text-primary" style="font-size: 5rem;"></i>
            <h2 class="mt-4">Fingerprint Authentication</h2>
            <p class="text-muted">Please authenticate using your fingerprint to continue</p>
            @if (!isAuthenticating)
            {
                <button class="btn btn-primary mt-3" @onclick="AuthenticateUser">
                    <i class="bi bi-fingerprint me-2"></i>
                    Authenticate
                </button>
            }
        </div>
    }
</div>

@code {
    private bool isLoading = true;
    private bool isAuthenticating = false;
    private bool isBiometricsAvailable = false;
    private bool showError = false;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Check if biometric authentication is available
            var availability = await CrossFingerprint.Current.IsAvailableAsync();
            isBiometricsAvailable = availability;

            if (availability)
            {
                await AuthenticateUser();
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Failed to initialize biometric authentication.";
            showError = true;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task AuthenticateUser()
    {
        if (isAuthenticating) return;

        try
        {
            isAuthenticating = true;
            showError = false;

            var request = new AuthenticationRequestConfiguration
            (
                "Verify your identity",
                "Please scan your fingerprint to access the app"
            );

            var result = await CrossFingerprint.Current.AuthenticateAsync(request);

            if (result.Authenticated)
            {
                var user = await DbContext.GetUserAsync();
                if (user != null)
                {
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    NavigationManager.NavigateTo("/login");
                }
            }
            else
            {
                errorMessage = "Authentication failed. Please try again.";
                showError = true;
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during authentication.";
            showError = true;
        }
        finally
        {
            isAuthenticating = false;
        }
    }

    private async Task RetryAuthentication()
    {
        showError = false;
        await AuthenticateUser();
    }
}